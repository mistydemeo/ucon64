dnl Process this file with autoconf to produce a configure script.
AC_INIT(uCON64, 1.9.9-1, noisyb@gmx.net)
AC_CONFIG_HEADER(config.h libnetgui/config.h libdiscmage/config.h)


CFLAGS="-Wall -W -O3"
LDFLAGS=-s

dnl Checks for programs.
AC_PROG_CC(gcc egcs cc)
AC_PROG_GCC_TRADITIONAL


AC_DEFINE(UCON64,1,[indicate it's uCON64 source code])


AC_MSG_CHECKING(whether debug output is enabled)
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [enable debug output (default: no)]),
              enable_debug=$enableval,
              enable_debug=no)
if test $enable_debug = yes; then
  AC_DEFINE(DEBUG,1,[enable debug output (default: no)])
fi
AC_MSG_RESULT($enable_debug)


AC_MSG_CHECKING(whether support for parallel port backup units is enabled)
AC_ARG_ENABLE(parallel,
              AC_HELP_STRING([--enable-parallel],
                             [enable support for parallel port backup units (default: yes)]),
              enable_parallel=$enableval,
              enable_parallel=yes)
if test $enable_parallel = yes; then
  AC_DEFINE(PARALLEL,1,[enable support for parallel port backup units (default: yes)])
fi
AC_MSG_RESULT($enable_parallel)


dnl AC_MSG_CHECKING(whether support for serial port backup units is enabled)
dnl AC_ARG_ENABLE(serial,
dnl              AC_HELP_STRING([--enable-serial],
dnl                              [enable support for serial port backup units (default: yes)]),
dnl               enable_serial=$enableval,
dnl               enable_serial=yes)
dnl if test $enable_serial = yes; then
dnl   AC_DEFINE(SERIAL,1,[enable support for serial port backup units (default: yes)])
dnl fi
dnl AC_MSG_RESULT($enable_serial)


dnl AC_MSG_CHECKING(whether support for usb port backup units is enabled)
dnl AC_ARG_ENABLE(usb,
dnl               AC_HELP_STRING([--enable-usb],
dnl                              [enable support for usb port backup units (default: yes)]),
dnl               enable_usb=$enableval,
dnl               enable_usb=yes)
dnl if test $enable_usb = yes; then
dnl   AC_DEFINE(USB,1,[enable support for usb port backup units (default: yes)])
dnl fi
dnl AC_MSG_RESULT($enable_usb)


DEFINE_GUI_MAKE=""
AC_MSG_CHECKING(whether GUI is enabled)
AC_ARG_ENABLE(gui,
              AC_HELP_STRING([--enable-gui],
                             [enable GUI (default: no)]),
              enable_gui=$enableval,
              enable_gui=no)
if test $enable_gui = yes; then
  AC_DEFINE(GUI,1,[enable GUI (default: no)])
  DEFINE_GUI_MAKE="GUI=1"

  dnl check for GTK+
  DEFINE_GTK_MAKE=""
  AM_PATH_GTK(1.2.10, DEFINE_GTK_MAKE="GTK=1")
  AC_SUBST(DEFINE_GTK_MAKE)

  dnl check for libgtkhtml
  DEFINE_GTK_HTML_MAKE=""
  dnl AM_PATH_GTK(1.2.10, DEFINE_GTK_HTML_MAKE="GTK_HTML=1")
  AC_SUBST(DEFINE_GTK_HTML_MAKE)

  dnl Check for GDK-Pixbuf
  DEFINE_GDK_PIXBUF_MAKE=""
  AM_PATH_GDK_PIXBUF(0.8.0, DEFINE_GDK_PIXBUF_MAKE="GDK_PIXBUF=1")
  AC_SUBST(DEFINE_GDK_PIXBUF_MAKE)

  dnl check for WXW
  DEFINE_WXW_MAKE=""
  dnl WX_AM_PATH(2.4.0, DEFINE_WXW_MAKE="WXW=1")
  dnl AC_CHECK_LIB (wx, , DEFINE_WXW_MAKE="WXW=1",,)
  AC_SUBST(DEFINE_WXW_MAKE)

  dnl check for SDL
  DEFINE_SDL_MAKE=""
  dnl AM_PATH_SDL(1.2.4, DEFINE_SDL_MAKE="SDL=1")
  AC_SUBST(DEFINE_SDL_MAKE)

  dnl check for PNG
  AC_CHECK_LIB(png, png_create_read_struct, have_libpng=yes, , -lz)
  if test $have_libpng == yes; then
  DEFINE_PNG_MAKE="PNG=1"
  else
  DEFINE_PNG_MAKE=""
  AC_MSG_WARN([*** Unable to find PNG library (http://www.libpng.org/pub/png/libpng.html)])
  fi
  AC_SUBST(DEFINE_PNG_MAKE)

  dnl AC_CHECK_LIB(z, uncompress, have_libz=yes)
  dnl if test x$have_libz != xyes; then
  dnl AC_MSG_WARN([*** Unable to find Zlib library (http://www.gzip.org/zlib/)])
  dnl fi

  dnl if test x$have_libpng = xyes -a x$have_libz = xyes; then
  dnl CFLAGS="$CFLAGS -DLOAD_PNG"
  dnl IMG_LIBS="$IMG_LIBS -lpng -lz"
  dnl fi

  AC_HAVE_LIBRARY(socket)
  AC_HAVE_LIBRARY(nsl)
fi
AC_MSG_RESULT($enable_gui)
AC_SUBST(DEFINE_GUI_MAKE)


AC_MSG_CHECKING(whether libdiscmage is enabled)
AC_ARG_ENABLE(discmage,
              AC_HELP_STRING([--enable-discmage],
                             [enable libdiscmage (default: yes)]),
              enable_discmage=$enableval,
              enable_discmage=yes)
if test $enable_discmage = yes; then
  AC_DEFINE(DISCMAGE,1,[enable libdiscmage (default: yes)])
  DEFINE_DISCMAGE_MAKE="DISCMAGE=1"
fi
AC_MSG_RESULT($enable_discmage)
AC_SUBST(DEFINE_DISCMAGE_MAKE)


AC_MSG_CHECKING(whether add-on libraries are dynamically loaded)
AC_ARG_ENABLE(dload,
              AC_HELP_STRING([--enable-dload],
                             [enable dynamic loading of add-on libraries (default: yes)]),
              enable_dload=$enableval,
              enable_dload=yes)
if test $enable_dload = yes; then
  AC_DEFINE(DLOPEN,1,[enable dynamic loading of add-on libraries (default: yes)])
  DEFINE_DLOPEN_MAKE="DLOPEN=1"
fi
AC_MSG_RESULT($enable_dload)
AC_SUBST(DEFINE_DLOPEN_MAKE)


AC_MSG_CHECKING(whether the use of color is enabled)
AC_ARG_ENABLE(ansi_color,
              AC_HELP_STRING([--enable-ansi-color],
                             [enable usage of color (default: yes)]),
              enable_ansi_color=$enableval,
              enable_ansi_color=yes)
if test $enable_ansi_color = yes; then
  AC_DEFINE(ANSI_COLOR,1,[enable usage of color (default: yes)])
fi
AC_MSG_RESULT($enable_ansi_color)


dnl Checks for libraries.
AC_MSG_CHECKING(for zlib)
AC_ARG_WITH(zlib,
            AC_HELP_STRING([--with-zlib],
                           [build with gzip and zip support (default: yes)]),
            with_zlib=$withval,
            with_zlib=yes)
if test $with_zlib = yes; then
  AC_TRY_COMPILE([#include <zlib.h>], , with_zlib=yes, with_zlib=no)
fi
if test $with_zlib = yes; then
  AC_DEFINE(HAVE_ZLIB_H,1,[build with gzip and zip support (default: yes)])
  LDFLAGS="$LDFLAGS -lz"
  DEFINE_ZLIB_MAKE="ZLIB=1"
fi
AC_MSG_RESULT($with_zlib)
AC_SUBST(DEFINE_ZLIB_MAKE)


dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h byteswap.h inttypes.h)
dnl NOT zlib.h! Or else --with[out]-zlib gets overrriden in config.h.

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd mkdir rmdir strcspn strtol strcasestr basename dirname realpath)

AC_OUTPUT(Makefile libdiscmage/Makefile libnetgui/Makefile)

echo
echo NOTE: On non-Linux systems you might need to use gmake instead of make
