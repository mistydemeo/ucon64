dnl Process this file with autoconf to produce a configure script.
AC_INIT(uCON64, 1.9.8beta7, noisyb@gmx.net)
AC_CONFIG_HEADER(config.h)


CFLAGS="-I. -Wall -O3"
LDFLAGS=-s

dnl Checks for programs.
AC_PROG_CC(gcc egcs cc)
AC_PROG_GCC_TRADITIONAL


AC_MSG_CHECKING(whether todo output is enabled)
AC_ARG_ENABLE(todo,
              AC_HELP_STRING([--enable-todo],
                             [enable todo output (default: no)]),
              enable_todo=$enableval,
              enable_todo=no)
if test $enable_todo = yes; then
  AC_DEFINE(TODO,1,[enable todo output (default: no)])
fi
AC_MSG_RESULT($enable_todo)


AC_MSG_CHECKING(whether debug output is enabled)
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [enable debug output (default: no)]),
              enable_debug=$enableval,
              enable_debug=no)
if test $enable_debug = yes; then
  AC_DEFINE(DEBUG,1,[enable debug output (default: no)])
fi
AC_MSG_RESULT($enable_debug)


AC_MSG_CHECKING(whether the internal database is enabled)
AC_ARG_ENABLE(db,
              AC_HELP_STRING([--enable-db],
                             [enable internal database (default: yes)]),
              enable_db=$enableval,
              enable_db=yes)
if test $enable_db = yes; then
  AC_DEFINE(DB,1,[enable internal database (default: yes)])
fi
AC_MSG_RESULT($enable_db)


AC_MSG_CHECKING(whether support for parallel port backup units is enabled)
AC_ARG_ENABLE(backup,
              AC_HELP_STRING([--enable-backup],
                             [enable support for parallel port backup units (default: yes)]),
              enable_backup=$enableval,
              enable_backup=yes)
if test $enable_backup = yes; then
  AC_DEFINE(BACKUP,1,[enable support for parallel port backup units (default: yes)])
fi
AC_MSG_RESULT($enable_backup)


AC_MSG_CHECKING(whether add-on libraries are dynamically loaded)
AC_ARG_ENABLE(dload,
              AC_HELP_STRING([--enable-dload],
                             [enable dynamic loading of add-on libraries (default: yes)]),
              enable_dload=$enableval,
              enable_dload=yes)
if test $enable_dload = yes; then
  AC_DEFINE(DLOPEN,1,[enable dynamic loading of add-on libraries (default: yes)])
  DEFINE_DLOPEN_MAKE="DLOPEN=1"
fi
AC_MSG_RESULT($enable_dload)
AC_SUBST(DEFINE_DLOPEN_MAKE)


AC_MSG_CHECKING(whether the use of color is enabled)
AC_ARG_ENABLE(ansi_color,
              AC_HELP_STRING([--enable-ansi-color],
                             [enable usage of color (default: yes)]),
              enable_ansi_color=$enableval,
              enable_ansi_color=yes)
if test $enable_ansi_color = yes; then
  AC_DEFINE(ANSI_COLOR,1,[enable usage of color (default: yes)])
fi
AC_MSG_RESULT($enable_ansi_color)


dnl Checks for libraries.
AC_MSG_CHECKING(for zlib)
AC_ARG_WITH(zlib,
            AC_HELP_STRING([--with-zlib],
                           [build with gzip and zip support (default: yes)]),
            with_zlib=$withval,
            with_zlib=yes)
if test $with_zlib = yes; then
  AC_TRY_COMPILE([#include <zlib.h>], , with_zlib=yes, with_zlib=no)
fi
if test $with_zlib = yes; then
  AC_DEFINE(ZLIB,1,[build with gzip and zip support (default: yes)])
  LDFLAGS="$LDFLAGS -lz"
  DEFINE_ZLIB_MAKE="ZLIB=1"
else
  AC_DEFINE(ZLIB,0,[build with gzip and zip support (default: yes)])
fi
AC_MSG_RESULT($with_zlib)
AC_SUBST(DEFINE_ZLIB_MAKE)


dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h byteswap.h zlib.h inttypes.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd mkdir rmdir strcspn strtol basename dirname)

AC_OUTPUT(Makefile libdiscmage/Makefile)

echo
echo NOTE: On non-Linux systems you might need to use gmake instead of make
