dnl Process this file with autoconf to produce a configure script.
AC_INIT(uCON64, 1.9.8beta5, noisyb@gmx.net)

CFLAGS="-I. -Wall -O3"
LDFLAGS=-s

dnl Checks for programs.
AC_PROG_CC(gcc egcs cc)
AC_PROG_GCC_TRADITIONAL

AC_MSG_CHECKING(whether debug output is enabled)
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [enable debug output (default: no)]),
              enable_debug=$enableval,
              enable_debug=no)
if test $enable_debug = yes; then
  DEFINE_DEBUG="#define DEBUG"
else
  DEFINE_DEBUG="//#define DEBUG"
fi
AC_MSG_RESULT($enable_debug)
AC_SUBST(DEFINE_DEBUG)

AC_MSG_CHECKING(whether the internal database is enabled)
AC_ARG_ENABLE(db,
              AC_HELP_STRING([--enable-db],
                             [enable internal database (default: yes)]),
              enable_db=$enableval,
              enable_db=yes)
if test $enable_db = yes; then
  DEFINE_DB="#define DB"
else
  DEFINE_DB="//#define DB"
fi
AC_MSG_RESULT($enable_db)
AC_SUBST(DEFINE_DB)

AC_MSG_CHECKING(whether support for parallel port backup units is enabled)
AC_ARG_ENABLE(backup,
              AC_HELP_STRING([--enable-backup],
                             [enable support for parallel port backup units (default: yes)]),
              enable_backup=$enableval,
              enable_backup=yes)
if test $enable_backup = yes; then
  DEFINE_BACKUP="#define BACKUP"
else
  DEFINE_BACKUP="//#define BACKUP"
fi
AC_MSG_RESULT($enable_backup)
AC_SUBST(DEFINE_BACKUP)

AC_MSG_CHECKING(whether support for CD backups is enabled)
AC_ARG_ENABLE(backup_cd,
              AC_HELP_STRING([--enable-backup-cd],
                             [enable support for CD backups (default: yes)]),
              enable_backup_cd=$enableval,
              enable_backup_cd=yes)
if test $enable_backup_cd = yes; then
  DEFINE_BACKUP_CD="#define BACKUP_CD"
else
  DEFINE_BACKUP_CD="//#define BACKUP_CD"
fi
AC_MSG_RESULT($enable_backup_cd)
AC_SUBST(DEFINE_BACKUP_CD)

AC_MSG_CHECKING(whether the use of color is enabled)
AC_ARG_ENABLE(ansi_color,
              AC_HELP_STRING([--enable-ansi-color],
                             [enable usage of color (default: yes)]),
              enable_ansi_color=$enableval,
              enable_ansi_color=yes)
if test $enable_ansi_color = yes; then
  DEFINE_ANSI_COLOR="#define ANSI_COLOR"
else
  DEFINE_ANSI_COLOR="//#define ANSI_COLOR"
fi
AC_MSG_RESULT($enable_ansi_color)
AC_SUBST(DEFINE_ANSI_COLOR)

dnl Checks for libraries.
AC_MSG_CHECKING(for zlib)
AC_ARG_WITH(zlib,
            AC_HELP_STRING([--with-zlib],
                           [build with zlib support (default: yes)]),
            with_zlib=$withval,
            with_zlib=yes)
if test $with_zlib = yes; then
  AC_TRY_COMPILE([#include <zlib.h>], , with_zlib=yes, with_zlib=no)
fi
if test $with_zlib = yes; then
  LDFLAGS="$LDFLAGS -lz"
  DEFINE_ZLIB_CONFIG="#define ZLIB"
  DEFINE_ZLIB_MAKE="ZLIB=1"
else
  DEFINE_ZLIB_CONFIG="//#define ZLIB"
fi
AC_MSG_RESULT($with_zlib)
AC_SUBST(DEFINE_ZLIB_CONFIG)
AC_SUBST(DEFINE_ZLIB_MAKE)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(getcwd mkdir putenv rmdir strcspn strerror strtol basename dirname)

AC_OUTPUT(Makefile config.h)

echo
echo NOTE: On non-Linux systems you might need to use gmake instead of make
