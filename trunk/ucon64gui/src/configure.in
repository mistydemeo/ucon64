# Process this file with autoconf to produce a configure script.
AC_INIT([ucon64gui],[1.0.0],[noisyb@gmx.net])
AC_CONFIG_SRCDIR([bottom.c])
AC_CONFIG_HEADER([config.h])

CFLAGS="-I. -Wall -O3"
LDFLAGS="-s"

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL


AC_MSG_CHECKING(whether todo output is enabled)
AC_ARG_ENABLE(todo,
              AC_HELP_STRING([--enable-todo],
                             [enable todo output (default: no)]),
              enable_todo=$enableval,
              enable_todo=no)
if test $enable_todo = yes; then
  AC_DEFINE(TODO,1,[enable todo output (default: no)])
fi
AC_MSG_RESULT($enable_todo)


AC_MSG_CHECKING(whether debug output is enabled)
AC_ARG_ENABLE(debug,
              AC_HELP_STRING([--enable-debug],
                             [enable debug output (default: no)]),
              enable_debug=$enableval,
              enable_debug=no)
if test $enable_debug = yes; then
  AC_DEFINE(DEBUG,1,[enable debug output (default: no)])
fi
AC_MSG_RESULT($enable_debug)


AC_MSG_CHECKING(whether add-on libraries are dynamically loaded)
AC_ARG_ENABLE(dload,
              AC_HELP_STRING([--enable-dload],
                             [enable dynamic loading of add-on libraries (default: yes)]),
              enable_dload=$enableval,
              enable_dload=yes)
if test $enable_dload = yes; then
  AC_DEFINE(DLOPEN,1,[enable dynamic loading of add-on libraries (default: yes)])
  DEFINE_DLOPEN_MAKE="DLOPEN=1"
fi
AC_MSG_RESULT($enable_dload)
AC_SUBST(DEFINE_DLOPEN_MAKE)


AC_MSG_CHECKING(whether the use of color is enabled)
AC_ARG_ENABLE(ansi_color,
              AC_HELP_STRING([--enable-ansi-color],
                             [enable usage of color (default: yes)]),
              enable_ansi_color=$enableval,
              enable_ansi_color=yes)
if test $enable_ansi_color = yes; then
  AC_DEFINE(ANSI_COLOR,1,[enable usage of color (default: yes)])
fi
AC_MSG_RESULT($enable_ansi_color)



# Checks for libraries.
AC_PATH_PROG(gtkpath, gtk-config)
AC_MSG_CHECKING(for GTK compile flags)
if test -x $gtkpath; then
GTK_CFLAGS=`$gtkpath --cflags 2>/dev/null`
GTK_LDFLAGS=`$gtkpath --libs gthread 2>/dev/null`
fi
AC_MSG_RESULT(ok)


# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_CHECK_HEADERS([OS.h inttypes.h stdlib.h string.h unistd.h gtk.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_STAT
AC_CHECK_FUNCS([getcwd memset mkdir rmdir strcasecmp strchr strcspn strdup strncasecmp strpbrk strrchr strspn strstr strtol])

CFLAGS="$CFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS $LIBS $GTK_LDFLAGS"


AC_CONFIG_FILES([Makefile libhtk/Makefile])
AC_OUTPUT
